{"version":3,"file":"static/js/6185.707a80ab.chunk.js","mappings":"6XAiBMA,EAAmB,CAAEC,IAAK,aAAcC,WAAW,GAS5CC,EAAc,SAAC,GAMrB,IAAD,EALJC,EAKI,EALJA,KACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,OACQC,EAEJ,EAFJC,OAEI,IADJC,YAAAA,OACI,MADUT,EACV,EACJ,GAA4BU,EAAAA,EAAAA,UAfL,QAevB,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACMC,GAAUC,EAAAA,EAAAA,QAAO,MAEvB,GAAqBC,EAAAA,EAAAA,iBAAgB,CACnCF,QAAAA,EACAX,OAAAA,EACAD,SAAAA,EACAD,KAAMS,IAJDO,GAAP,eAOMC,GAAUH,EAAAA,EAAAA,QAAO,CAErBI,MAAMC,EAAAA,EAAAA,mBAAkBnB,EAAKiB,QAAQC,MACrCE,MAAMC,EAAAA,EAAAA,mBAAkBrB,EAAKiB,QAAQG,QAGjCE,GAAgBR,EAAAA,EAAAA,QAAO,KAE7BS,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAMP,EAAQQ,QAAQlB,GAC5Be,EAAcG,SAAUC,EAAAA,EAAAA,SAAQF,EAAKnB,EACtC,GAAE,CAACE,EAAQF,KAEZkB,EAAAA,EAAAA,YAAU,WACR,IAAMI,EA3Ca,IA2CJhB,EAAO,GAChBiB,EAAMD,EA5CO,GA6CnBjB,GAAS,SAAAmB,GAAG,wBAAQA,IAAR,OAAgBP,EAAcG,QAAQK,MAAMH,EAAOC,IAAnD,GACb,GAAE,CAACjB,EAAMJ,IAEV,IAMMwB,GACHf,GACDP,EAAMuB,OAAS,GACfvB,EAAMuB,QAAN,UAAeV,EAAcG,eAA7B,aAAe,EAAuBO,QAGxC,EAAuBf,EAAQQ,QAAvBP,EAAR,EAAQA,KAAME,EAAd,EAAcA,KACd,OAAKF,EAAKc,QAAWZ,EAAKY,QAKxB,UAAC,EAAAC,UAAD,YACE,iCACE,SAAC,EAAAC,UAAD,WACE,SAAC,EAAAC,cAAD,CACEC,MAnES,YAoETC,QAvBgB,SAAAC,GACxB5B,EAAS,IACTF,EAAU8B,GACV1B,EAAQ,EACT,EAoBS2B,MAAOhC,OAIX,SAAC,EAAAiC,YAAD,CAAaC,IAAK5B,EAAlB,SACGJ,EAAMiC,KAAI,gBAAGC,EAAH,EAAGA,GAAOC,GAAV,mBACT,SAAC,EAAAC,gBAAD,WAKE,SAAC,EAAAC,YAAD,UAAgBF,KALID,EADb,MAWZ3B,GAAcb,KAGhB4B,IACC,SAAC,EAAAgB,YAAD,CACEV,QAAS,kBAAMzB,GAAQ,SAAAiB,GAAG,OAAIA,EAAM,CAAV,GAAjB,EACTmB,MAAO,CAAEC,UAAW,IAFtB,SAGC,kBAjCE,UAAC,EAAAC,UAAD,WAAW,IA1DH,8CAiGlB,C,0MCnHYjB,EAAYkB,EAAAA,EAAAA,IAAH,mFAMTX,EAAcW,EAAAA,EAAAA,GAAH,wHAQXN,EAAkBM,EAAAA,EAAAA,GAAH,qNAUfD,EAAYC,EAAAA,EAAAA,EAAH,8C,6HCrBTC,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAG7B,OAFAC,QAAQD,MAAMA,IAGZ,UAAC,EAAApB,UAAD,YACE,SAAC,EAAAsB,UAAD,CAAWC,KAAM,GAAIC,MAAM,uBAC3B,SAAC,EAAAC,QAAD,UAAS,0BACT,SAAC,EAAAC,KAAD,UAAON,EAAMO,QACb,SAAC,EAAAC,WAAD,CAAYC,GAAG,IAAId,MAAO,CAAEe,cAAe,cAA3C,SAA2D,yBAQhE,EAEDX,EAAaY,SAAW,CACtBX,OAAOY,EAAAA,EAAAA,OAAM,CACXC,QAASC,EAAAA,OACTP,KAAMO,EAAAA,S,0KChBGpB,EAAc,SAAC,GAAgD,IAA9CV,EAA6C,EAA7CA,QAA6C,IAApC+B,SAAAA,OAAoC,SAAhBC,GAAgB,YACzE,GAAoC/D,EAAAA,EAAAA,WAAS,GAA7C,eAAOU,EAAP,KAAmBsD,EAAnB,KACMC,GAASzD,EAAAA,EAAAA,QAAO,MAChB0D,GAAU1D,EAAAA,EAAAA,QAAO,MACjB2D,GAAW3D,EAAAA,EAAAA,QAAO,MAClB4D,GAAa5D,EAAAA,EAAAA,QAAO,IAE1BS,EAAAA,EAAAA,YAAU,WACR,IAAiBkB,EAAQ8B,EAAjB9C,QAQR,OAPAgD,EAAShD,QAAU,IAAIkD,sBAAqB,kBAAML,GAAc,EAApB,IAC5CG,EAAShD,QAAQmD,QAAQnC,GAIzB+B,EAAQ/C,QAAU8C,EAAO9C,QAAQoD,wBAE1B,kBAAMJ,EAAShD,QAAQqD,UAAUrC,EAAjC,CACR,GAAE,IAEH,IAMA,EAA0B+B,EAAQ/C,SAAW,GAArCsD,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACTC,GAAQ,QAAKF,MAAAA,EAAOC,OAAAA,GAAWX,GAErC,OACE,SAAC,EAAAa,QAAD,gBACEzC,IAAK8B,EACLlC,QAZgB,SAAA8C,GAClBb,GAAc,GACdI,EAAWjD,SAAW,EACtBY,GAAWA,EAAQqC,EAAWjD,QAAS0D,EACxC,EASGf,SAAUA,EACVgB,UAAWpE,GACPiE,GALN,aAOGjE,GAAa,SAAC,EAAAqE,QAAD,CAAS7B,KAAe,GAATwB,IA1CjB,cA6CjB,EAEDjC,EAAYiB,SAAW,CACrB3B,QAASiD,EAAAA,KACTlB,SAAUmB,EAAAA,K,+ICjDCL,GAAS/B,EAAAA,EAAAA,GAAOqC,EAAAA,gBAAPrC,CAAH,sxCACfsC,EAAAA,EAAAA,iBAMa,qBAAGrB,SAA2B,OAAS,CAAvC,IACC,qBAAGA,SAA2B,OAAS,CAAvC,IAGP,gBAAGW,EAAH,EAAGA,MAAH,OAAeW,EAAAA,EAAAA,cAAaC,KAAKC,KAAKb,GAAtC,IACC,gBAAGC,EAAH,EAAGA,OAAH,OAAgBU,EAAAA,EAAAA,cAAaC,KAAKC,KAAKZ,GAAvC,IASU,qBAAGI,UACT,oBAAsB,aADhB,IAITC,EAAUlC,EAAAA,EAAAA,KAAH,gXAET,gBAAGK,EAAH,EAAGA,KAAH,OAAckC,EAAAA,EAAAA,cAAalC,EAA3B,IACC,gBAAGA,EAAH,EAAGA,KAAH,OAAckC,EAAAA,EAAAA,cAAalC,EAA3B,G,2LC3BCrB,EAAgB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOG,EAAmC,EAAnCA,MAAOF,EAA4B,EAA5BA,QAAYgC,GAAgB,YACxE,GAA4B/D,EAAAA,EAAAA,UAASiC,GAArC,eAAOhC,EAAP,KAAeC,EAAf,MAEAe,EAAAA,EAAAA,YAAU,WACRf,EAAU+B,EACX,GAAE,CAACA,IAEJ,IAAMsD,EAAc,SAAAvD,GAClB9B,EAAU8B,GACVD,GAAWA,GAAQyD,EAAAA,EAAAA,cAAaxD,GACjC,EAEKyD,GAAOC,EAAAA,EAAAA,SAAQ5D,GAGrB,OAFK7B,GAAQC,EAAUuF,EAAK,IAG1BA,EAAK/D,OAAS,IACZ,SAAC,EAAAiE,aAAD,kBAAiB5B,GAAjB,aACG0B,EAAKrD,KAAI,SAAAJ,GAAI,OACZ,SAAC,EAAA4D,aAAD,CAEE3F,OAAQA,IAAW+B,EACnBD,QAAS,kBAAMwD,EAAYvD,EAAlB,EAHX,SAKGA,GAJIA,EAFK,MAYrB,EAEDH,EAAc6B,SAAW,CACvB5B,OAAO+D,EAAAA,EAAAA,WAAU,CAAChC,EAAAA,QAAQiC,EAAAA,EAAAA,SAAQjC,EAAAA,UAClC5B,MAAO4B,EAAAA,OACP9B,QAASiD,EAAAA,K,+IChCEW,EAAc9C,EAAAA,EAAAA,IAAH,gCACpBsC,EAAAA,EAAAA,cAAa,aAGJS,GAAe/C,EAAAA,EAAAA,GAAOkD,EAAAA,WAAPlD,CAAH,gbAcrBmD,EAAAA,EAAAA,gBAAe,2BAER,qBAAG/F,OAzBO,QACE,mBAwBZ,IAEW,qBAAGA,OAzBD,sBA0BO,aADT,IAKE,qBAAGA,QA7BO,WA6BV,G,8GChClBgG,EAAsB,SAGfxF,EAAkB,SAAC,GAAyC,IAAvCF,EAAsC,EAAtCA,QAASX,EAA6B,EAA7BA,OAAQF,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACvD,GAAoCK,EAAAA,EAAAA,WAAS,GAA7C,eAAOU,EAAP,KAAmBsD,EAAnB,KACMkC,GAAY1F,EAAAA,EAAAA,QAAOZ,GACnBuG,GAAiB3F,EAAAA,EAAAA,QAAO,MACxB4F,GAAa5F,EAAAA,EAAAA,QAAO,MAmD1B,OA/CAS,EAAAA,EAAAA,YAAU,WAAO,IAAD,QACdkF,EAAehF,QAAf,UACEgF,EAAehF,eADjB,kBAEEZ,EAAQY,eAFV,iBAEE,EAAiBkF,yBAFnB,aAEE,EAAoC9B,wBAAwBG,OAE9D,IAAM4B,EAAI,UAAG/F,EAAQY,eAAX,aAAG,EAAiBoF,iBAAiB,OAE/C,UAAID,QAAJ,IAAIA,GAAAA,EAAM5E,OAAQ,CAChBsC,GAAc,GACd,IAAMwC,EAAYF,EAAKA,EAAK5E,OAAS,GAG/B+E,EAAmBL,EAAWjF,SAAX,OAAqBzB,QAArB,IAAqBA,OAArB,EAAqBA,EAAMgC,QAC9CgF,EAAoBN,EAAWjF,UAAX,OAAsBzB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMgC,SAEtDiF,EAAAA,EAAAA,aAAYH,GAAW,WAAO,IAAD,EAS3B,GARAxC,GAAc,GACdkC,EAAU/E,SAAW+E,EAAU/E,WAIlB,UAAGZ,EAAQY,eAAX,aAAG,EAAiBoD,wBAAwBqC,KAG3C,EAAG,CACf,GAAIF,EACF,OAAOnG,EAAQY,QAAQ0F,eAAe,CACpCC,SAAUb,IAId,GAAIQ,EAAkB,CACpB,IAAMM,EAAcC,SAASrH,GAC7BsH,OAAOtH,SAAS,CACdiH,IACET,EAAehF,SACd+F,MAAMH,GA9CD,IA8CgCA,GACxCD,SAAUb,GAEb,CACF,CACF,GACF,CAEDG,EAAWjF,QAAX,OAAqBzB,QAArB,IAAqBA,OAArB,EAAqBA,EAAMgC,MAC5B,GAAE,CAAChC,EAAMC,EAAUY,IAEb,CAACG,EACT,C,kGC3DYyG,EAAiB,SAAAC,GAC5B,IAAMC,GAAK7G,EAAAA,EAAAA,SAAO8G,EAAAA,EAAAA,QAAOF,GAAYA,EAAW,OAEhDnG,EAAAA,EAAAA,YAAU,WACR,IAAQE,EAAYkG,EAAZlG,QACR,OAAO,kBAAMA,GAAWA,GAAjB,CACR,GAAE,GACJ,C,oICFKoG,EAAM,IAAIC,EAAAA,QAwChB,UAjCgB,SAAC,GAAgB,IAAd1H,EAAa,EAAbA,OACT2H,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BzH,EAAAA,EAAAA,UAAS,MAAnC,eAAO+C,EAAP,KAAc4E,EAAd,KACA,GAA8B3H,EAAAA,EAAAA,UAAS,MAAvC,eAAO4H,EAAP,KAAgBC,EAAhB,KAaA,OAVAV,EAAAA,EAAAA,gBAAeI,EAAIO,QAEnB7G,EAAAA,EAAAA,YAAU,WACR8G,QAAQC,IAAI,CAACT,EAAIU,gBAAgBR,GAAUF,EAAIW,gBAAgBT,KAC5DU,MAAK,YAA8B,IAAD,eAA3BC,EAA2B,KAAbzH,EAAa,KACjCkH,GAAW,kBAAKO,GAAN,IAAoBzH,QAAAA,IAC/B,IACA0H,MAAMV,EACV,GAAE,CAACF,KAGF,iCACI1E,GAAS6E,IACT,iCACE,UAAC,EAAAU,UAAD,CAAW5F,MAAO,CAAE6F,aAAc,IAAlC,UAAyCX,EAAQY,MAAM,QACvD,SAAC,EAAA/I,YAAD,CACEC,KAAMkI,EACN9H,OAAQA,EACRH,SA9BU,OAkCfoD,IAAS,SAAC,EAAAD,aAAD,CAAcC,MAAOA,MAGpC,C,wQC3CKwE,EAAM,I,QAAIC,SAQViB,EAAmB,SAAC/I,EAAMgJ,GAC9B,IAAKC,MAAMC,QAAQlJ,GAAO,MAAO,GAEjC,IAAMmJ,EAAOnJ,EAAKoJ,QAAO,SAACC,EAAKC,GAC7B,IAAQ3G,EAAO2G,EAAP3G,GACF4G,EAAaD,EAAWN,GAQ9B,OANIK,EAAI1G,GACN0G,EAAI1G,GAAIqG,GAAWQ,KAAKD,GAExBF,EAAI1G,IAAJ,kBAAe2G,GAAf,cAA4BN,EAAY,CAACO,KAGpCF,CACR,GAAE,CAAC,GAGJ,OAAOI,OAAOC,OAAOP,GAAMzG,KAAI,SAAAiH,GAAG,yBAC7BA,GAD6B,cAE/BX,EAAYW,EAAIX,GAAWY,KAAK,OAFD,GAInC,EAEYvI,EAAoB,SAAAD,GAAI,OAAI2H,EAAiB3H,EAAM,MAA3B,EACxBD,EAAoB,SAAAD,GAAI,OAAI6H,EAAiB7H,EAAM,YAA3B,EAaxB2I,EAAiB,SAAC5I,GAAwB,IAAf6I,EAAc,uDAAN,EAC9C,GAAKb,MAAMC,QAAN,OAAcjI,QAAd,IAAcA,OAAd,EAAcA,EAASC,MAA5B,CACA,IAAQA,EAASD,EAATC,KAGF6I,EAAW7I,EACdY,MAAM,EAAGgI,GACTpH,KAAI,gBAAGsH,EAAH,EAAGA,cAAe1H,EAAlB,EAAkBA,KAAlB,OAA6B0H,GAAiB1H,CAA9C,IAED2H,EAAiB/I,EAAKc,OAAS+H,EAAS/H,OACxCkI,EACJD,EAAiB,EAAjB,mBACgBA,EADhB,iCAIF,OAAOF,EAAS/H,OAAS,EACrB,CACEmI,QAASJ,EAASH,KAAK,MACvBM,UAAAA,GAEF,IAnBqC,CAoB1C,EAQYE,EAAiB,SAAAnJ,GAC5B,GAAKgI,MAAMC,QAAN,OAAcjI,QAAd,IAAcA,OAAd,EAAcA,EAASG,MAA5B,CACA,IAAQA,EAASH,EAATG,KAEJiJ,EAAe,EAWbrK,EAAOoB,EAAKgI,QAAO,SAACC,EAAD,GAAqC,IAA7BiB,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,IAAKjI,EAAW,EAAXA,KAC1CkI,GAAU1E,EAAAA,EAAAA,cAAayE,GACvBE,GAAM3E,EAAAA,EAAAA,cAAawE,GAEzB,MAAgB,aAAZE,GAAkC,cAARC,GAE1BpB,EAAImB,KACNH,GAAgB,EAChBhB,EAAImB,GAAJ,kBAAmBnB,EAAImB,IAAvB,CAAiClI,KAJuB+G,CAQ3D,GArBmB,CAClBqB,SAAU,GACVC,WAAY,GACZC,OAAQ,GACRC,WAAY,GACZC,MAAO,KAkBT,OAAOT,EAAerK,EAAO,IA5BY,CA6B1C,EAEY+K,EAAY,SAACC,EAAMjG,GAC9B,OAAOiG,EACH,QAAQC,KAAKD,GACXA,EAAKE,QAAQ,KAAM,IACnBrD,EAAIsD,YAAYH,EAAMjG,GACxB,IACL,C","sources":["components/CreditsInfo/CreditsInfo.jsx","components/CreditsInfo/CreditsInfo.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/etc/LoadMoreBtn/LoadMoreBtn.jsx","components/etc/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/etc/OptionButtons/OptionButtons.jsx","components/etc/OptionButtons/OptionButtons.styled.jsx","hooks/useImageGallery.js","hooks/useWillUnmount.js","pages/Credits.jsx","services/tmdb/helpers.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { OptionButtons } from '../etc/OptionButtons/OptionButtons';\nimport { PersonCard } from './PersonCard/PersonCard';\nimport { LoadMoreBtn } from 'components/etc/LoadMoreBtn/LoadMoreBtn';\nimport { SubHeader } from 'components/Subheader/Subheader';\nimport { normalizeCrewData, normalizeCastData } from 'services/tmdb/helpers';\nimport { useImageGallery } from 'hooks/useImageGallery';\nimport { sortObj } from 'utils';\n\nimport {\n  CreditsList,\n  CreditsListItem,\n  Container,\n  NoCredits,\n} from './CreditsInfo.styled';\n\nconst CARDS_PER_PAGE = 30;\nconst DEF_SORT_OPTIONS = { key: 'popularity', ascending: false };\nconst DEF_OPTION_VALUE = 'cast';\nconst OPTION_ITEMS = 'cast crew';\nconst NO_CREDITS = 'The cast for this film has not been added';\n\n//\n// CreditsInfo\n//\n\nexport const CreditsInfo = ({\n  data,\n  scrollBy,\n  onLoad,\n  loader: Loader,\n  sortOptions = DEF_SORT_OPTIONS,\n}) => {\n  const [active, setActive] = useState(DEF_OPTION_VALUE);\n  const [cards, setCards] = useState([]);\n  const [page, setPage] = useState(1);\n  const listRef = useRef(null);\n\n  const [showLoader] = useImageGallery({\n    listRef,\n    onLoad,\n    scrollBy,\n    data: cards,\n  });\n\n  const credits = useRef({\n    /* !! id(798286) 2 роли на 1 человека */\n    cast: normalizeCastData(data.credits.cast),\n    crew: normalizeCrewData(data.credits.crew),\n  });\n\n  const sortedCredits = useRef([]);\n\n  useEffect(() => {\n    const arr = credits.current[active];\n    sortedCredits.current = sortObj(arr, sortOptions);\n  }, [active, sortOptions]);\n\n  useEffect(() => {\n    const start = (page - 1) * CARDS_PER_PAGE;\n    const end = start + CARDS_PER_PAGE;\n    setCards(cur => [...cur, ...sortedCredits.current.slice(start, end)]);\n  }, [page, active]);\n\n  const handleClickOption = name => {\n    setCards([]);\n    setActive(name);\n    setPage(1);\n  };\n\n  const showLoadMore =\n    !showLoader &&\n    cards.length > 0 &&\n    cards.length < sortedCredits.current?.length;\n\n  // No credits\n  const { cast, crew } = credits.current;\n  if (!cast.length && !crew.length) {\n    return <NoCredits> {NO_CREDITS}</NoCredits>;\n  }\n\n  return (\n    <Container>\n      <>\n        <SubHeader>\n          <OptionButtons\n            items={OPTION_ITEMS}\n            onClick={handleClickOption}\n            value={active}\n          />\n        </SubHeader>\n\n        <CreditsList ref={listRef}>\n          {cards.map(({ id, ...rest }) => (\n            <CreditsListItem key={id}>\n              {/* !! при большом кол-ве тормозит - \n                возможно из-за большого кол-ва styled component\n                в разметке PersonCard\n              */}\n              <PersonCard {...rest} />\n            </CreditsListItem>\n          ))}\n        </CreditsList>\n\n        {showLoader && Loader}\n      </>\n\n      {showLoadMore && (\n        <LoadMoreBtn\n          onClick={() => setPage(cur => cur + 1)}\n          style={{ marginTop: 15 }}\n        >\n          Load more\n        </LoadMoreBtn>\n      )}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const CreditsList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 100%;\n`;\n\nexport const CreditsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 150px;\n\n  background: linear-gradient(180deg, #ebebeb 0, transparent);\n  border-radius: var(--border-radius);\n  overflow: hidden;\n`;\n\nexport const NoCredits = styled.p`\n  text-align: center;\n`;\n","import { LinkButton } from 'styles/shared';\nimport { Caption, Container, Text } from './ErrorMessage.styled';\nimport { IconError } from 'styles/icons';\nimport { shape, string } from 'prop-types';\n\nexport const ErrorMessage = ({ error }) => {\n  console.error(error);\n\n  return (\n    <Container>\n      <IconError size={40} color=\"var(--color-blue)\" />\n      <Caption>Something went wrong</Caption>\n      <Text>{error.code}</Text>\n      <LinkButton to=\"/\" style={{ textTransform: 'capitalize' }}>\n        Go to the homepage\n      </LinkButton>\n      {/* <LinkButton to={-1} style={{ textTransform: 'capitalize' }}>\n        Go back\n      </LinkButton> */}\n    </Container>\n  );\n};\n\nErrorMessage.propType = {\n  error: shape({\n    message: string,\n    code: string,\n  }),\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { Button, Spinner } from './LoadMoreBtn.styled';\nimport { func, bool } from 'prop-types';\n\nconst BTN_TITLE = 'Load more';\n\n//\n// LoadMoreBtn\n//\n\nexport const LoadMoreBtn = ({ onClick, centered = true, ...restProps }) => {\n  const [showLoader, setShowLoader] = useState(false);\n  const btnRef = useRef(null);\n  const btnRect = useRef(null);\n  const observer = useRef(null);\n  const clickCount = useRef(1);\n\n  useEffect(() => {\n    const { current: ref } = btnRef;\n    observer.current = new IntersectionObserver(() => setShowLoader(false));\n    observer.current.observe(ref);\n\n    // фактический размер, чтобы спинер не менял габариты кнопки\n    // Иначе надо жестко задать размеры кнопки в стилях\n    btnRect.current = btnRef.current.getBoundingClientRect();\n\n    return () => observer.current.unobserve(ref);\n  }, []);\n\n  const handleClick = e => {\n    setShowLoader(true);\n    clickCount.current += 1;\n    onClick && onClick(clickCount.current, e);\n  };\n\n  const { width, height } = btnRect.current || '';\n  const btnProps = { width, height, ...restProps };\n\n  return (\n    <Button\n      ref={btnRef}\n      onClick={handleClick}\n      centered={centered}\n      isLoading={showLoader}\n      {...btnProps}\n    >\n      {showLoader ? <Spinner size={height * 0.5} /> : BTN_TITLE}\n    </Button>\n  );\n};\n\nLoadMoreBtn.propType = {\n  onClick: func,\n  centered: bool,\n};\n","import styled from '@emotion/styled';\nimport { ButtonSecondary, FlexCentered } from 'styles/shared';\nimport { calcCSSValue } from 'utils';\n\nexport const Button = styled(ButtonSecondary)`\n  ${FlexCentered()};\n\n  /* padding-top: 17px;\n  padding-bottom: 17px; */\n  /* width: 100%; */\n\n  margin-left: ${({ centered }) => (centered ? 'auto' : 0)};\n  margin-right: ${({ centered }) => (centered ? 'auto' : 0)};\n\n  /* без ceil при адаптивке переносится текст кнопки */\n  width: ${({ width }) => calcCSSValue(Math.ceil(width))};\n  height: ${({ height }) => calcCSSValue(Math.ceil(height))};\n\n  //white-space: nowrap;\n\n  /*\n    Пока кнопка со спинером - не убираем цвето фона\n    Иначе, спиннер сольется с фоном страницы\n    Можно сдлеать так, чтобы цвет спиннера менялся на прозрачном фоне\n  */\n  background-color: ${({ isLoading }) =>\n    isLoading ? 'var(--color-blue)' : 'transparent'};\n`;\n\nexport const Spinner = styled.span`\n  display: inline-block;\n  width: ${({ size }) => calcCSSValue(size)};\n  height: ${({ size }) => calcCSSValue(size)};\n\n  border: 2px solid #fff;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n\n  animation: rotation 0.7s linear infinite;\n  opacity: 0.6;\n\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { string, func, oneOfType, arrayOf } from 'prop-types';\nimport { OptionsList, OptionButton } from './OptionButtons.styled';\nimport { normalizeStr, getList } from 'utils';\n\nexport const OptionButtons = ({ items, value, onClick, ...restProps }) => {\n  const [active, setActive] = useState(value);\n\n  useEffect(() => {\n    setActive(value);\n  }, [value]);\n\n  const handleClick = name => {\n    setActive(name);\n    onClick && onClick(normalizeStr(name));\n  };\n\n  const btns = getList(items);\n  if (!active) setActive(btns[0]);\n\n  return (\n    btns.length > 0 && (\n      <OptionsList {...restProps}>\n        {btns.map(name => (\n          <OptionButton\n            key={name}\n            active={active === name}\n            onClick={() => handleClick(name)}\n          >\n            {name}\n          </OptionButton>\n        ))}\n      </OptionsList>\n    )\n  );\n};\n\nOptionButtons.propType = {\n  items: oneOfType([string, arrayOf(string)]),\n  value: string,\n  onClick: func,\n};\n","import styled from '@emotion/styled';\nimport { ButtonBase, FlexCentered, TransitionBase } from 'styles/shared';\n\nconst COLOR_ACTIVE = 'white';\nconst COLOR_INACTIVE = 'var(--color-text)';\nconst COLOR_ACTIVE_BG = 'var(--color-orange)';\nconst COLOR_INACTIVE_FOCUSED_BG = 'lightgray';\n\nexport const OptionsList = styled.div`\n  ${FlexCentered('gap: 8px')};\n`;\n\nexport const OptionButton = styled(ButtonBase)`\n  position: relative;\n  padding: 5px 12px 5px 12px;\n\n  font-family: inherit;\n  font-size: 12px;\n  letter-spacing: -0.3px;\n  text-transform: capitalize;\n\n  @media screen and (min-width: 320px) {\n    font-size: inherit;\n  }\n\n  border-radius: calc(var(--border-radius) * 0.8);\n  ${TransitionBase('color background-color')};\n\n  color: ${({ active }) => (active ? COLOR_ACTIVE : COLOR_INACTIVE)};\n\n  background-color: ${({ active }) =>\n    active ? COLOR_ACTIVE_BG : 'transparent'};\n\n  &:focus-visible,\n  &:hover {\n    background-color: ${({ active }) => !active && COLOR_INACTIVE_FOCUSED_BG};\n  }\n`;\n","import { useRef, useState, useEffect } from 'react';\nimport { onImageLoad } from 'utils';\n\nconst DEF_SCROLL_BEHAVIOR = 'smooth';\nconst DEF_SCROLL_BY = 1.5;\n\nexport const useImageGallery = ({ listRef, onLoad, data, scrollBy }) => {\n  const [showLoader, setShowLoader] = useState(false);\n  const onLoadRef = useRef(onLoad);\n  const listItemHeight = useRef(null);\n  const curDataLen = useRef(null);\n\n  // полагаем, галерея загружена,\n  // если загружено последнее изображение(не lazy)\n  useEffect(() => {\n    listItemHeight.current =\n      listItemHeight.current ??\n      listRef.current?.firstElementChild?.getBoundingClientRect().height;\n\n    const imgs = listRef.current?.querySelectorAll('img');\n\n    if (imgs?.length) {\n      setShowLoader(true);\n      const lastImage = imgs[imgs.length - 1];\n\n      // вычисляем тут, в колбеке уже будут равны (curDataLen.current === data.length)\n      const shouldAutoscroll = curDataLen.current < data?.length;\n      const shouldScrollToTop = curDataLen.current >= data?.length;\n\n      onImageLoad(lastImage, () => {\n        setShowLoader(false);\n        onLoadRef.current && onLoadRef.current();\n\n        // тут, чтобы знать актуальный, а не тот,\n        // что был до момента загрузки галереи\n        const listTop = listRef.current?.getBoundingClientRect().top;\n\n        // полагаем, высота всех изображений в галерее одинаковая\n        if (listTop < 0) {\n          if (shouldScrollToTop) {\n            return listRef.current.scrollIntoView({\n              behavior: DEF_SCROLL_BEHAVIOR,\n            });\n          }\n\n          if (shouldAutoscroll) {\n            const scrollByNum = parseInt(scrollBy);\n            window.scrollBy({\n              top:\n                listItemHeight.current *\n                (isNaN(scrollByNum) ? DEF_SCROLL_BY : scrollByNum),\n              behavior: DEF_SCROLL_BEHAVIOR,\n            });\n          }\n        }\n      });\n    }\n    // запоминаем текущее\n    curDataLen.current = data?.length;\n  }, [data, scrollBy, listRef]);\n\n  return [showLoader];\n};\n","import { useEffect, useRef } from 'react';\nimport { isFunc } from 'utils';\n\nexport const useWillUnmount = callback => {\n  const cb = useRef(isFunc(callback) ? callback : null);\n\n  useEffect(() => {\n    const { current } = cb;\n    return () => current && current();\n  }, []);\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PageTitle } from 'styles/shared';\nimport { CreditsInfo } from 'components/CreditsInfo/CreditsInfo';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { useWillUnmount } from 'hooks/useWillUnmount';\nimport TmdbService from 'services/tmdb/tmdbSrv';\n\nconst srv = new TmdbService();\nconst DEF_SCROLL_BY = 2;\n\n//\n// Credits\n//\n\nconst Credits = ({ loader }) => {\n  const { movieId } = useParams();\n  const [error, setError] = useState(null);\n  const [details, setDetails] = useState(null);\n\n  // cleanup\n  useWillUnmount(srv.abort);\n\n  useEffect(() => {\n    Promise.all([srv.getMovieDetails(movieId), srv.getMovieCredits(movieId)])\n      .then(([movieDetails, credits]) => {\n        setDetails({ ...movieDetails, credits });\n      })\n      .catch(setError);\n  }, [movieId]);\n\n  return (\n    <>\n      {!error && details && (\n        <>\n          <PageTitle style={{ marginBottom: 35 }}>{details.title} </PageTitle>\n          <CreditsInfo\n            data={details}\n            loader={loader}\n            scrollBy={DEF_SCROLL_BY}\n          />\n        </>\n      )}\n      {error && <ErrorMessage error={error} />}\n    </>\n  );\n};\n\nexport default Credits;\n","import { normalizeStr } from 'utils';\nimport TmdbService from './tmdbSrv';\n\nconst srv = new TmdbService();\n\n/**\n *\n * Убирает дублирование персон, сворачивая поле [fieldName] в список\n * @param {array} data - массив данных (объектов) о съмочной группе\n * @returns - массив объектов без дублирования\n */\nconst normalizeCredits = (data, fieldName) => {\n  if (!Array.isArray(data)) return [];\n\n  const hash = data.reduce((res, personData) => {\n    const { id } = personData;\n    const fieldValue = personData[fieldName];\n\n    if (res[id]) {\n      res[id][fieldName].push(fieldValue);\n    } else {\n      res[id] = { ...personData, [fieldName]: [fieldValue] };\n    }\n\n    return res;\n  }, {});\n\n  //   преобразуем в строку, чтобы не делать это в целевом компоненте\n  return Object.values(hash).map(obj => ({\n    ...obj,\n    [fieldName]: obj[fieldName].join(', '),\n  }));\n};\n\nexport const normalizeCrewData = crew => normalizeCredits(crew, 'job');\nexport const normalizeCastData = cast => normalizeCredits(cast, 'character');\n\n/**\n * Информация об актерах\n *\n * @param {object} credits - объект с массивами cast и crew\n * @param {number} count - кол-во имен актеров для анонса\n *\n * @returns {object}\n *  {preview, remaining}\n *    preview - строка-список имен (анонс)\n *    remaining - строка (оставшиеся) для ссылки на страницу всех актеров\n */\nexport const getCastPreview = (credits, count = 5) => {\n  if (!Array.isArray(credits?.cast)) return;\n  const { cast } = credits;\n\n  // валидность данных массива не проверяем (для упрощения)\n  const castList = cast\n    .slice(0, count)\n    .map(({ original_name, name }) => original_name || name);\n\n  const remainingCount = cast.length - castList.length;\n  const remaining =\n    remainingCount > 0\n      ? `...other ${remainingCount} actor(s)`\n      : `...other actor(s)`;\n\n  return castList.length > 0\n    ? {\n        preview: castList.join(', '),\n        remaining,\n      }\n    : null;\n};\n\n/**\n * Информация об основном персонале\n *\n * @param {object} credits - объект с массивами cast и crew\n * @returns {object} - {director, screenplay, writer, ...}\n */\nexport const getCrewPreview = credits => {\n  if (!Array.isArray(credits?.crew)) return;\n  const { crew } = credits;\n\n  let personsCount = 0;\n\n  const personsList = {\n    director: [],\n    screenplay: [],\n    writer: [],\n    characters: [],\n    story: [],\n  };\n\n  // known_for_department\n  const data = crew.reduce((res, { department, job, name }) => {\n    const jobName = normalizeStr(job);\n    const dep = normalizeStr(department);\n\n    if (jobName === 'director' && dep !== 'directing') return res;\n\n    if (res[jobName]) {\n      personsCount += 1;\n      res[jobName] = [...res[jobName], name];\n    }\n\n    return res;\n  }, personsList);\n\n  return personsCount ? data : null;\n};\n\nexport const getAvatar = (path, width) => {\n  return path\n    ? /http/i.test(path)\n      ? path.replace(/\\//, '')\n      : srv.getImageUrl(path, width)\n    : null;\n};\n"],"names":["DEF_SORT_OPTIONS","key","ascending","CreditsInfo","data","scrollBy","onLoad","Loader","loader","sortOptions","useState","active","setActive","cards","setCards","page","setPage","listRef","useRef","useImageGallery","showLoader","credits","cast","normalizeCastData","crew","normalizeCrewData","sortedCredits","useEffect","arr","current","sortObj","start","end","cur","slice","showLoadMore","length","Container","SubHeader","OptionButtons","items","onClick","name","value","CreditsList","ref","map","id","rest","CreditsListItem","PersonCard","LoadMoreBtn","style","marginTop","NoCredits","styled","ErrorMessage","error","console","IconError","size","color","Caption","Text","code","LinkButton","to","textTransform","propType","shape","message","string","centered","restProps","setShowLoader","btnRef","btnRect","observer","clickCount","IntersectionObserver","observe","getBoundingClientRect","unobserve","width","height","btnProps","Button","e","isLoading","Spinner","func","bool","ButtonSecondary","FlexCentered","calcCSSValue","Math","ceil","handleClick","normalizeStr","btns","getList","OptionsList","OptionButton","oneOfType","arrayOf","ButtonBase","TransitionBase","DEF_SCROLL_BEHAVIOR","onLoadRef","listItemHeight","curDataLen","firstElementChild","imgs","querySelectorAll","lastImage","shouldAutoscroll","shouldScrollToTop","onImageLoad","top","scrollIntoView","behavior","scrollByNum","parseInt","window","isNaN","useWillUnmount","callback","cb","isFunc","srv","TmdbService","movieId","useParams","setError","details","setDetails","abort","Promise","all","getMovieDetails","getMovieCredits","then","movieDetails","catch","PageTitle","marginBottom","title","normalizeCredits","fieldName","Array","isArray","hash","reduce","res","personData","fieldValue","push","Object","values","obj","join","getCastPreview","count","castList","original_name","remainingCount","remaining","preview","getCrewPreview","personsCount","department","job","jobName","dep","director","screenplay","writer","characters","story","getAvatar","path","test","replace","getImageUrl"],"sourceRoot":""}