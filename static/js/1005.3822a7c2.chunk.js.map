{"version":3,"file":"static/js/1005.3822a7c2.chunk.js","mappings":"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","sources":["components/CreditsInfo/CreditsInfo.jsx","components/CreditsInfo/CreditsInfo.styled.jsx","components/etc/LoadMoreBtn/LoadMoreBtn.jsx","components/etc/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/etc/OptionButtons/OptionButtons.jsx","components/etc/OptionButtons/OptionButtons.styled.jsx","services/tmdb/helpers.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { OptionButtons } from '../etc/OptionButtons/OptionButtons';\nimport { PersonCard } from './PersonCard/PersonCard';\nimport { LoadMoreBtn } from 'components/etc/LoadMoreBtn/LoadMoreBtn';\nimport { SubHeader } from 'components/Subheader/Subheader';\nimport { normalizeCrewData, normalizeCastData } from 'services/tmdb/helpers';\nimport { useImageGallery, useLoadMorePagination } from 'hooks';\nimport { sortObj } from 'utils';\n\nimport {\n  CreditsList,\n  CreditsListItem,\n  Container,\n  NoCredits,\n} from './CreditsInfo.styled';\n\nconst CARDS_PER_PAGE = 30;\nconst DEF_SORT_OPTIONS = { key: 'popularity', ascending: false };\nconst DEF_OPTION_VALUE = 'cast';\nconst OPTION_ITEMS = 'cast crew';\n\nconst noCredits = (active = 'credits') =>\n  `The ${active} for this film has not been added`;\n\n//\n// CreditsInfo\n//\n\nexport const CreditsInfo = ({\n  data,\n  scrollBy,\n  onLoad,\n  loader: Loader,\n  sortOptions = DEF_SORT_OPTIONS,\n}) => {\n  const [active, setActive] = useState(DEF_OPTION_VALUE);\n  const [credits, setCredits] = useState([]);\n  const listRef = useRef(null);\n\n  const [cards, setPage] = useLoadMorePagination({\n    data: credits,\n    itemsPerPage: CARDS_PER_PAGE,\n  });\n\n  const [showLoader] = useImageGallery({\n    listRef,\n    onLoad,\n    scrollBy,\n    data: cards,\n  });\n\n  const creditsNorm = useRef({\n    /* id(798286) 2 роли у 1 человека */\n    cast: normalizeCastData(data.credits.cast),\n    crew: normalizeCrewData(data.credits.crew),\n  });\n\n  useEffect(() => {\n    setPage(1);\n    setCredits(sortObj(creditsNorm.current[active], sortOptions));\n  }, [active, sortOptions, setPage]);\n\n  const showLoadMore =\n    !showLoader && cards.length > 0 && cards.length < credits.length;\n\n  // no cast id(454172)\n  const { cast, crew } = creditsNorm.current;\n  if (!cast.length && !crew.length) {\n    return <NoCredits> {noCredits()}</NoCredits>;\n  }\n\n  return (\n    <Container>\n      <>\n        <SubHeader>\n          <OptionButtons\n            items={OPTION_ITEMS}\n            onClick={setActive}\n            value={active}\n          />\n        </SubHeader>\n\n        {!credits.length && <NoCredits> {noCredits(active)}</NoCredits>}\n\n        {cards.length > 0 && (\n          <CreditsList ref={listRef}>\n            {cards.map(({ id, ...rest }) => (\n              <CreditsListItem key={id}>\n                {/* !! при большом кол-ве тормозит - \n                возможно из-за большого кол-ва styled component\n                в разметке PersonCard\n              */}\n                <PersonCard {...rest} />\n              </CreditsListItem>\n            ))}\n          </CreditsList>\n        )}\n\n        {showLoader && Loader}\n      </>\n\n      {showLoadMore && (\n        <LoadMoreBtn\n          onClick={() => setPage(cur => cur + 1)}\n          style={{ marginTop: 15 }}\n        >\n          Load more\n        </LoadMoreBtn>\n      )}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const CreditsList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 100%;\n`;\n\nexport const CreditsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 150px;\n\n  background: linear-gradient(180deg, #ebebeb 0, transparent);\n  border-radius: var(--border-radius);\n  overflow: hidden;\n`;\n\nexport const NoCredits = styled.p`\n  text-align: center;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Button, Spinner } from './LoadMoreBtn.styled';\nimport { func, bool } from 'prop-types';\n\nconst BTN_TITLE = 'Load more';\n\n//\n// LoadMoreBtn\n//\n\nexport const LoadMoreBtn = ({ onClick, centered = true, ...restProps }) => {\n  const [showLoader, setShowLoader] = useState(false);\n  const btnRef = useRef(null);\n  const btnRect = useRef(null);\n  const observer = useRef(null);\n  const clickCount = useRef(1);\n\n  useEffect(() => {\n    const { current: ref } = btnRef;\n    observer.current = new IntersectionObserver(() => setShowLoader(false));\n    observer.current.observe(ref);\n\n    // фактический размер, чтобы спинер не изменял габариты кнопки\n    // Иначе, надо жестко задать размеры кнопки в стилях\n    btnRect.current = btnRef.current.getBoundingClientRect();\n\n    return () => observer.current.unobserve(ref);\n  }, []);\n\n  const handleClick = e => {\n    setShowLoader(true);\n    clickCount.current += 1;\n    onClick && onClick(clickCount.current, e);\n  };\n\n  const { width, height } = btnRect.current || '';\n  const btnProps = { width, height, ...restProps };\n\n  return (\n    <Button\n      ref={btnRef}\n      onClick={handleClick}\n      centered={centered}\n      isLoading={showLoader}\n      {...btnProps}\n    >\n      {showLoader ? <Spinner size={height * 0.5} /> : BTN_TITLE}\n    </Button>\n  );\n};\n\nLoadMoreBtn.propType = {\n  onClick: func,\n  centered: bool,\n};\n","import styled from '@emotion/styled';\nimport { ButtonSecondary, FlexCentered } from 'styles/shared';\nimport { calcCSSValue } from 'utils';\n\nexport const Button = styled(ButtonSecondary)`\n  ${FlexCentered()};\n\n  margin-left: ${({ centered }) => (centered ? 'auto' : 0)};\n  margin-right: ${({ centered }) => (centered ? 'auto' : 0)};\n\n  width: ${({ width }) => calcCSSValue(width)};\n  height: ${({ height }) => calcCSSValue(height)};\n\n  /*\n    Пока кнопка со спинером - не убираем цвето фона\n    Иначе, спиннер сольется с фоном страницы\n    Можно сдлеать, чтобы цвет спиннера менялся на прозрачном фоне\n  */\n  background-color: ${({ isLoading }) =>\n    isLoading ? 'var(--color-blue)' : 'transparent'};\n`;\n\nexport const Spinner = styled.span`\n  display: inline-block;\n  width: ${({ size }) => calcCSSValue(size)};\n  height: ${({ size }) => calcCSSValue(size)};\n\n  border: 2px solid #fff;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n\n  animation: rotation 0.7s linear infinite;\n  opacity: 0.6;\n\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { string, func, oneOfType, arrayOf } from 'prop-types';\nimport { OptionsList, OptionButton } from './OptionButtons.styled';\nimport { normalizeStr, getList } from 'utils';\n\nexport const OptionButtons = ({ items, value, onClick, ...restProps }) => {\n  const [active, setActive] = useState(value);\n\n  useEffect(() => {\n    setActive(value);\n  }, [value]);\n\n  const handleClick = name => {\n    setActive(name);\n    onClick && onClick(normalizeStr(name));\n  };\n\n  const btns = getList(items);\n  if (!active) setActive(btns[0]);\n\n  return (\n    btns.length > 0 && (\n      <OptionsList {...restProps}>\n        {btns.map(name => (\n          <OptionButton\n            key={name}\n            active={active === name}\n            onClick={() => handleClick(name)}\n          >\n            {name}\n          </OptionButton>\n        ))}\n      </OptionsList>\n    )\n  );\n};\n\nOptionButtons.propType = {\n  items: oneOfType([string, arrayOf(string)]),\n  value: string,\n  onClick: func,\n};\n","import styled from '@emotion/styled';\nimport { ButtonBase, FlexCentered, TransitionBase } from 'styles/shared';\n\nconst COLOR_ACTIVE = 'white';\nconst COLOR_INACTIVE = 'var(--color-text)';\nconst COLOR_ACTIVE_BG = 'var(--color-orange)';\nconst COLOR_INACTIVE_FOCUSED_BG = 'lightgray';\n\nexport const OptionsList = styled.div`\n  ${FlexCentered('gap: 8px')};\n`;\n\nexport const OptionButton = styled(ButtonBase)`\n  position: relative;\n  padding: 5px 12px 5px 12px;\n\n  font-family: inherit;\n  font-size: 12px;\n  letter-spacing: -0.3px;\n  text-transform: capitalize;\n\n  @media screen and (min-width: 320px) {\n    font-size: inherit;\n  }\n\n  border-radius: calc(var(--border-radius) * 0.8);\n  ${TransitionBase('color background-color')};\n\n  color: ${({ active }) => (active ? COLOR_ACTIVE : COLOR_INACTIVE)};\n\n  background-color: ${({ active }) =>\n    active ? COLOR_ACTIVE_BG : 'transparent'};\n\n  &:focus-visible,\n  &:hover {\n    background-color: ${({ active }) => !active && COLOR_INACTIVE_FOCUSED_BG};\n  }\n`;\n","import { normalizeStr } from 'utils';\nimport TmdbService from './tmdbSrv';\n\nconst srv = new TmdbService();\n\n/**\n *\n * Убирает дублирование персон, сворачивая поле [fieldName] в список\n * @param {array} data - массив данных (объектов) о съмочной группе\n * @returns - массив объектов без дублирования\n *\n * !! id(283546) в crew один человек(\"Luke Losey\") Director/Writer, но разные id\n */\nconst normalizeCredits = (data, fieldName) => {\n  if (!Array.isArray(data)) return [];\n\n  const hash = data.reduce((res, personData) => {\n    const { id } = personData;\n    const fieldValue = personData[fieldName];\n\n    if (res[id]) {\n      res[id][fieldName].push(fieldValue);\n    } else {\n      res[id] = { ...personData, [fieldName]: [fieldValue] };\n    }\n\n    return res;\n  }, {});\n\n  // преобразуем в строку, чтобы не делать это в целевом компоненте\n  return Object.values(hash).map(obj => ({\n    ...obj,\n    [fieldName]: obj[fieldName].join(', '),\n  }));\n};\n\nexport const normalizeCrewData = crew => normalizeCredits(crew, 'job');\nexport const normalizeCastData = cast => normalizeCredits(cast, 'character');\n\n/**\n *\n * Информация об актерах\n * @param {object} credits - объект с массивами cast и crew\n * @param {number} count - кол-во имен актеров для анонса\n * @returns {object}\n *  {preview, remaining}\n *    preview - строка-список имен (анонс)\n *    remaining - строка (оставшиеся) для ссылки на страницу всех актеров\n */\nexport const getCastPreview = (credits, count = 5) => {\n  if (!Array.isArray(credits?.cast)) return;\n  const { cast } = credits;\n\n  // валидность данных массива не проверяем (для упрощения)\n  const castList = cast\n    .slice(0, count)\n    .map(({ original_name, name }) => original_name || name);\n\n  const remainingCount = cast.length - castList.length;\n  const remaining =\n    remainingCount > 0\n      ? `...other ${remainingCount} actor(s)`\n      : `...other actor(s)`;\n\n  return castList.length > 0\n    ? {\n        preview: castList.join(', '),\n        remaining,\n      }\n    : null;\n};\n\n/**\n *\n * Информация об основном персонале\n * @param {object} credits - объект с массивами cast и crew\n * @returns {object} - {director, screenplay, writer, ...}\n */\nexport const getCrewPreview = credits => {\n  if (!Array.isArray(credits?.crew)) return;\n  const { crew } = credits;\n\n  let personsCount = 0;\n\n  const personsList = {\n    director: [],\n    screenplay: [],\n    writer: [],\n    characters: [],\n    story: [],\n  };\n\n  // known_for_department\n  const data = crew.reduce((res, { department, job, name }) => {\n    const jobName = normalizeStr(job);\n    const dep = normalizeStr(department);\n\n    if (jobName === 'director' && dep !== 'directing') return res;\n\n    if (res[jobName]) {\n      personsCount += 1;\n      res[jobName] = [...res[jobName], name];\n    }\n\n    return res;\n  }, personsList);\n\n  return personsCount ? data : null;\n};\n\nexport const getAvatar = (path, width) => {\n  return path\n    ? /http/i.test(path)\n      ? path.replace(/\\//, '')\n      : srv.getImageUrl(path, width)\n    : null;\n};\n"],"names":["DEF_SORT_OPTIONS","key","ascending","noCredits","active","CreditsInfo","data","scrollBy","onLoad","Loader","loader","sortOptions","useState","setActive","credits","setCredits","listRef","useRef","useLoadMorePagination","itemsPerPage","cards","setPage","useImageGallery","showLoader","creditsNorm","cast","normalizeCastData","crew","normalizeCrewData","useEffect","sortObj","current","showLoadMore","length","Container","SubHeader","OptionButtons","items","onClick","value","NoCredits","CreditsList","ref","map","id","rest","CreditsListItem","PersonCard","LoadMoreBtn","cur","style","marginTop","styled","centered","restProps","setShowLoader","btnRef","btnRect","observer","clickCount","IntersectionObserver","observe","getBoundingClientRect","unobserve","width","height","btnProps","Button","e","isLoading","Spinner","size","propType","func","bool","ButtonSecondary","FlexCentered","calcCSSValue","handleClick","name","normalizeStr","btns","getList","OptionsList","OptionButton","oneOfType","string","arrayOf","ButtonBase","TransitionBase","srv","TmdbService","normalizeCredits","fieldName","Array","isArray","hash","reduce","res","personData","fieldValue","push","Object","values","obj","join","getCastPreview","count","castList","slice","original_name","remainingCount","remaining","preview","getCrewPreview","personsCount","department","job","jobName","dep","director","screenplay","writer","characters","story","getAvatar","path","test","replace","getImageUrl"],"sourceRoot":""}