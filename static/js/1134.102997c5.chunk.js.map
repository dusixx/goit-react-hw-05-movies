{"version":3,"file":"static/js/1134.102997c5.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.jsx","components/Searchbar/Searchbar.jsx","components/Searchbar/Searchbar.styled.jsx","components/etc/LoadMoreBtn/LoadMoreBtn.jsx","components/etc/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/etc/TextField/TextField.jsx","components/etc/TextField/TextField.styled.jsx","hooks/useWillUnmount.js","pages/Movies.jsx"],"sourcesContent":["import { LinkButton } from 'styles/shared';\nimport { Caption, Container, Text } from './ErrorMessage.styled';\nimport { IconError } from 'styles/icons';\nimport { shape, string } from 'prop-types';\n\nexport const ErrorMessage = ({ error }) => {\n  console.error(error);\n\n  return (\n    <Container>\n      <IconError size={40} color=\"var(--color-blue)\" />\n      <Caption>Something went wrong</Caption>\n      <Text>{error.code}</Text>\n      <LinkButton to=\"/\" style={{ textTransform: 'capitalize' }}>\n        Go to the homepage\n      </LinkButton>\n      {/* <LinkButton to={-1} style={{ textTransform: 'capitalize' }}>\n        Go back\n      </LinkButton> */}\n    </Container>\n  );\n};\n\nErrorMessage.propType = {\n  error: shape({\n    message: string,\n    code: string,\n  }),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { oneOfType, string, number, func } from 'prop-types';\nimport { SearchBtn, SearchForm, Container } from './Searchbar.styled';\nimport TextField from 'components/etc/TextField';\nimport { IconSearch } from 'styles/icons';\n\n//\n// Searchbar\n//\n\n// извлекаем onChange, чтобы не перебивал (1) при прокидывании restProps (2)\nconst Searchbar = ({ style, onSubmit, onChange, ...restProps }) => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // При изменении вручную строки запроса и нажатии Enter -\n  // изменится текст в поле поиска\n  useEffect(() => {\n    setQuery(searchParams.get('query') ?? '');\n  }, [searchParams]);\n\n  // можно менять ?query в запросе тут, но надо делать debounce\n  const handleSearchQueryChange = e => {\n    const query = e?.target.value.trim() || '';\n    setQuery(query);\n    onChange && onChange(query, e);\n  };\n\n  // Менеям ?query в строке запроса только при сабмите\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n    onSubmit && onSubmit(query, e);\n  };\n\n  return (\n    <Container style={style}>\n      <SearchForm onSubmit={handleFormSubmit}>\n        <TextField\n          autocomplete=\"off\"\n          placeholder=\"Search movies...\"\n          onChange={handleSearchQueryChange} // (1)\n          value={query}\n          {...restProps} // (2)\n        />\n\n        <SearchBtn type=\"submit\" disabled={!query}>\n          <IconSearch size=\"100%\" />\n        </SearchBtn>\n      </SearchForm>\n    </Container>\n  );\n};\n\nSearchbar.propTypes = {\n  width: oneOfType([string, number]),\n  height: oneOfType([string, number]),\n  onSubmit: func,\n  onChange: func,\n};\n\nexport default Searchbar;\n","import styled from '@emotion/styled';\nimport { ButtonPrimary, FlexCentered, TransitionBase } from 'styles/shared';\nimport { calcCSSValue } from 'utils';\n\nexport const Container = styled.div`\n  height: ${({ height }) => calcCSSValue(height) || '100%'};\n  width: ${({ width }) => calcCSSValue(width) || '100%'};\n  margin: 0 auto 0 auto;\n\n  border: 1px solid rgb(var(--color-blue-rgb), 0.5);\n  border-radius: var(--border-radius);\n  overflow: hidden;\n\n  ${TransitionBase('box-shadow border-color')};\n\n  &:focus-within {\n    box-shadow: 0 0 0 0.3rem rgb(var(--color-blue-rgb), 0.2);\n    border-color: rgb(var(--color-blue-rgb), 0.7);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 70%;\n  }\n`;\n\nexport const SearchForm = styled.form`\n  ${FlexCentered()};\n\n  height: 100%;\n  width: 100%;\n  border-radius: unset;\n`;\n\nexport const SearchBtn = styled(ButtonPrimary)`\n  height: 100%;\n  padding: 8px 15px 8px 15px;\n  border-radius: unset;\n  background-color: var(--color-blue);\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Button, Spinner } from './LoadMoreBtn.styled';\nimport { func, bool } from 'prop-types';\n\nconst BTN_TITLE = 'Load more';\n\n//\n// LoadMoreBtn\n//\n\nexport const LoadMoreBtn = ({ onClick, centered = true, ...restProps }) => {\n  const [showLoader, setShowLoader] = useState(false);\n  const btnRef = useRef(null);\n  const btnRect = useRef(null);\n  const observer = useRef(null);\n  const clickCount = useRef(1);\n\n  useEffect(() => {\n    const { current: ref } = btnRef;\n    observer.current = new IntersectionObserver(() => setShowLoader(false));\n    observer.current.observe(ref);\n\n    // фактический размер, чтобы спинер не менял габариты кнопки\n    // Иначе надо жестко задать размеры кнопки в стилях\n    btnRect.current = btnRef.current.getBoundingClientRect();\n\n    return () => observer.current.unobserve(ref);\n  }, []);\n\n  const handleClick = e => {\n    setShowLoader(true);\n    clickCount.current += 1;\n    onClick && onClick(clickCount.current, e);\n  };\n\n  const { width, height } = btnRect.current || '';\n  const btnProps = { width, height, ...restProps };\n\n  return (\n    <Button\n      ref={btnRef}\n      onClick={handleClick}\n      centered={centered}\n      isLoading={showLoader}\n      {...btnProps}\n    >\n      {showLoader ? <Spinner size={height * 0.5} /> : BTN_TITLE}\n    </Button>\n  );\n};\n\nLoadMoreBtn.propType = {\n  onClick: func,\n  centered: bool,\n};\n","import styled from '@emotion/styled';\nimport { ButtonSecondary, FlexCentered } from 'styles/shared';\nimport { calcCSSValue } from 'utils';\n\nexport const Button = styled(ButtonSecondary)`\n  ${FlexCentered()};\n\n  /* padding-top: 17px;\n  padding-bottom: 17px; */\n  /* width: 100%; */\n\n  margin-left: ${({ centered }) => (centered ? 'auto' : 0)};\n  margin-right: ${({ centered }) => (centered ? 'auto' : 0)};\n\n  /* без ceil при адаптивке переносится текст кнопки */\n  width: ${({ width }) => calcCSSValue(Math.ceil(width))};\n  height: ${({ height }) => calcCSSValue(Math.ceil(height))};\n\n  //white-space: nowrap;\n\n  /*\n    Пока кнопка со спинером - не убираем цвето фона\n    Иначе, спиннер сольется с фоном страницы\n    Можно сдлеать так, чтобы цвет спиннера менялся на прозрачном фоне\n  */\n  background-color: ${({ isLoading }) =>\n    isLoading ? 'var(--color-blue)' : 'transparent'};\n`;\n\nexport const Spinner = styled.span`\n  display: inline-block;\n  width: ${({ size }) => calcCSSValue(size)};\n  height: ${({ size }) => calcCSSValue(size)};\n\n  border: 2px solid #fff;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n\n  animation: rotation 0.7s linear infinite;\n  opacity: 0.6;\n\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { func, string } from 'prop-types';\nimport { ClearBtn, InputWrapper, Input, Field } from './TextField.styled';\nimport { VscClose as IconClose } from 'react-icons/vsc';\n\nconst TextField = ({ value, type, onChange, ...restProps }) => {\n  return (\n    <Field>\n      <InputWrapper>\n        <Input\n          type={type || 'text'}\n          onChange={onChange}\n          value={value}\n          {...restProps}\n        />\n        {value && (\n          // !! обязательно type=\"button\", по-умолчанию ставит \"submit\"\n          <ClearBtn type=\"button\" onClick={() => onChange(null)}>\n            <IconClose size=\"100%\" />\n          </ClearBtn>\n        )}\n      </InputWrapper>\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  value: string,\n  type: string,\n  onChange: func,\n};\n\nexport default TextField;\n","import styled from '@emotion/styled';\nimport { ButtonBase, TransitionBase } from 'styles/shared';\n\nexport const Field = styled.label`\n  width: ${({ width }) => width || '100%'};\n  height: ${({ height }) => height || '100%'};\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  width: 100%;\n  height: ${({ height }) => height || '100%'};\n  color: var(--color-text);\n`;\n\nexport const Input = styled.input`\n  height: 100%;\n  width: 100%;\n  padding: 0 40px 0 20px;\n\n  font-family: inherit;\n  font-size: inherit;\n  background-color: white;\n\n  border: unset;\n  outline: none;\n\n  ${TransitionBase()};\n\n  &::placeholder {\n    opacity: 0.6;\n    text-transform: capitalize;\n  }\n`;\n\nexport const ClearBtn = styled(ButtonBase)`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n\n  height: 60%;\n  padding: 3px;\n\n  color: gray;\n  transform: translateY(-50%);\n  transition-property: color;\n\n  &:focus-visible,\n  &:hover {\n    color: var(--color-black);\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport { isFunc } from 'utils';\n\nexport const useWillUnmount = callback => {\n  const cb = useRef(isFunc(callback) ? callback : null);\n\n  useEffect(() => {\n    const { current } = cb;\n    return () => current && current();\n  }, []);\n};\n","import Searchbar from 'components/Searchbar/Searchbar';\nimport { useEffect, useState, useRef } from 'react';\nimport MovieGallery from 'components/MovieGallery/MovieGallery';\nimport { useSearchParams } from 'react-router-dom';\nimport TmdbService from 'services/tmdb/tmdbSrv';\nimport { LoadMoreBtn } from 'components/etc/LoadMoreBtn/LoadMoreBtn';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { showInfo } from 'utils';\nimport { useWillUnmount } from 'hooks/useWillUnmount';\n\nconst srv = new TmdbService();\nconst NO_SEARCH_RESULTS = 'No search results matching your query';\nconst searchbarStyle = {\n  height: 45,\n  marginBottom: 40,\n  marginTop: 10,\n};\n\n//\n// Movies\n//\n\nconst Movies = ({ loader }) => {\n  const [error, setError] = useState(null);\n  const [wasLoaded, setWasLoaded] = useState(false);\n  const [results, setResults] = useState([]);\n  const [query, setQuery] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const totalPages = useRef(1);\n  let page = useRef(1);\n\n  // cleanup\n  useWillUnmount(srv.abort);\n\n  useEffect(() => {\n    setQuery({ text: searchParams.get('query'), time: Date.now() });\n  }, [searchParams]);\n\n  // Добавляем в query текущее время, чтобы запрос был уникален и\n  // многократно срабатывал поиск по одному и тому же тексту\n  useEffect(() => {\n    const text = query?.text ?? '';\n\n    if (!text) {\n      setWasLoaded(false);\n      return setResults([]);\n    }\n\n    srv\n      .searchMovies(text)\n      .then(({ results, total_pages, total_results }) => {\n        if (!total_results) {\n          // !! лучше отобразить сообщение на странице\n          return showInfo(NO_SEARCH_RESULTS);\n        }\n        setResults(results);\n        totalPages.current = total_pages;\n      })\n      .catch(setError);\n  }, [query]);\n\n  const handleLoadMoreClick = clickCount => {\n    page.current = clickCount;\n    const { text } = query;\n\n    srv\n      .searchMovies(text, { page: page.current })\n      .then(({ results }) => {\n        setResults(cur => [...cur, ...results]);\n      })\n      .catch(setError);\n  };\n\n  // для простоты - очищаем строку запроса\n  const handleQueryChange = query => {\n    if (!query) setSearchParams({ query });\n  };\n\n  const handleSearchbarSubmit = text => {\n    setQuery({ text, time: Date.now() });\n  };\n\n  const showLoadMoreBtn =\n    // wasLoaded, чтобы не висела пока формируется галерея найденых\n    wasLoaded && totalPages.current > 0 && page.current < totalPages.current;\n\n  return error ? (\n    <ErrorMessage error={error} />\n  ) : (\n    <>\n      <Searchbar\n        style={searchbarStyle}\n        onSubmit={handleSearchbarSubmit}\n        onChange={handleQueryChange}\n      />\n\n      {results?.length > 0 && (\n        <MovieGallery\n          data={results}\n          loader={loader}\n          onLoad={() => setWasLoaded(true)}\n        />\n      )}\n\n      {showLoadMoreBtn && (\n        <LoadMoreBtn onClick={handleLoadMoreClick} style={{ marginTop: 40 }} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["ErrorMessage","error","console","Container","IconError","size","color","Caption","Text","code","LinkButton","to","style","textTransform","propType","shape","message","string","onSubmit","onChange","restProps","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","get","SearchForm","e","preventDefault","autocomplete","placeholder","target","value","trim","SearchBtn","type","disabled","IconSearch","styled","height","calcCSSValue","width","TransitionBase","FlexCentered","ButtonPrimary","LoadMoreBtn","onClick","centered","showLoader","setShowLoader","btnRef","useRef","btnRect","observer","clickCount","ref","current","IntersectionObserver","observe","getBoundingClientRect","unobserve","btnProps","Button","isLoading","Spinner","func","bool","ButtonSecondary","Math","ceil","Field","InputWrapper","Input","ClearBtn","ButtonBase","useWillUnmount","callback","cb","isFunc","srv","TmdbService","searchbarStyle","marginBottom","marginTop","loader","setError","wasLoaded","setWasLoaded","results","setResults","totalPages","page","abort","text","time","Date","now","searchMovies","then","total_pages","total_results","showInfo","catch","showLoadMoreBtn","length","data","onLoad","cur"],"sourceRoot":""}