{"version":3,"file":"static/js/5415.a4296296.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.jsx","components/etc/LoadMoreBtn/LoadMoreBtn.jsx","components/etc/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/etc/OptionButtons/OptionButtons.jsx","components/etc/OptionButtons/OptionButtons.styled.jsx","hooks/useWillUnmount.js","pages/Home.jsx"],"sourcesContent":["import { LinkButton } from 'styles/shared';\nimport { Caption, Container, Text } from './ErrorMessage.styled';\nimport { IconError } from 'styles/icons';\nimport { shape, string } from 'prop-types';\n\nexport const ErrorMessage = ({ error }) => {\n  console.error(error);\n\n  return (\n    <Container>\n      <IconError size={40} color=\"var(--color-blue)\" />\n      <Caption>Something went wrong</Caption>\n      <Text>{error.code}</Text>\n      <LinkButton to=\"/\" style={{ textTransform: 'capitalize' }}>\n        Go to the homepage\n      </LinkButton>\n      {/* <LinkButton to={-1} style={{ textTransform: 'capitalize' }}>\n        Go back\n      </LinkButton> */}\n    </Container>\n  );\n};\n\nErrorMessage.propType = {\n  error: shape({\n    message: string,\n    code: string,\n  }),\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { Button, Spinner } from './LoadMoreBtn.styled';\nimport { func, bool } from 'prop-types';\n\nconst BTN_TITLE = 'Load more';\n\n//\n// LoadMoreBtn\n//\n\nexport const LoadMoreBtn = ({ onClick, centered = true, ...restProps }) => {\n  const [showLoader, setShowLoader] = useState(false);\n  const btnRef = useRef(null);\n  const btnRect = useRef(null);\n  const observer = useRef(null);\n  const clickCount = useRef(1);\n\n  useEffect(() => {\n    const { current: ref } = btnRef;\n    observer.current = new IntersectionObserver(() => setShowLoader(false));\n    observer.current.observe(ref);\n\n    // фактический размер, чтобы спинер не менял габариты кнопки\n    // Иначе надо жестко задать размеры кнопки в стилях\n    btnRect.current = btnRef.current.getBoundingClientRect();\n\n    return () => observer.current.unobserve(ref);\n  }, []);\n\n  const handleClick = e => {\n    setShowLoader(true);\n    clickCount.current += 1;\n    onClick && onClick(clickCount.current, e);\n  };\n\n  const { width, height } = btnRect.current || '';\n  const btnProps = { width, height, ...restProps };\n\n  return (\n    <Button\n      ref={btnRef}\n      onClick={handleClick}\n      centered={centered}\n      isLoading={showLoader}\n      {...btnProps}\n    >\n      {showLoader ? <Spinner size={height * 0.5} /> : BTN_TITLE}\n    </Button>\n  );\n};\n\nLoadMoreBtn.propType = {\n  onClick: func,\n  centered: bool,\n};\n","import styled from '@emotion/styled';\nimport { ButtonSecondary, FlexCentered } from 'styles/shared';\nimport { calcCSSValue } from 'utils';\n\nexport const Button = styled(ButtonSecondary)`\n  ${FlexCentered()};\n\n  /* padding-top: 17px;\n  padding-bottom: 17px; */\n  /* width: 100%; */\n\n  margin-left: ${({ centered }) => (centered ? 'auto' : 0)};\n  margin-right: ${({ centered }) => (centered ? 'auto' : 0)};\n\n  /* без ceil при адаптивке переносится текст кнопки */\n  width: ${({ width }) => calcCSSValue(Math.ceil(width))};\n  height: ${({ height }) => calcCSSValue(Math.ceil(height))};\n\n  //white-space: nowrap;\n\n  /*\n    Пока кнопка со спинером - не убираем цвето фона\n    Иначе, спиннер сольется с фоном страницы\n    Можно сдлеать так, чтобы цвет спиннера менялся на прозрачном фоне\n  */\n  background-color: ${({ isLoading }) =>\n    isLoading ? 'var(--color-blue)' : 'transparent'};\n`;\n\nexport const Spinner = styled.span`\n  display: inline-block;\n  width: ${({ size }) => calcCSSValue(size)};\n  height: ${({ size }) => calcCSSValue(size)};\n\n  border: 2px solid #fff;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n\n  animation: rotation 0.7s linear infinite;\n  opacity: 0.6;\n\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { string, func, oneOfType, arrayOf } from 'prop-types';\nimport { OptionsList, OptionButton } from './OptionButtons.styled';\nimport { normalizeStr, getList } from 'utils';\n\nexport const OptionButtons = ({ items, value, onClick, ...restProps }) => {\n  const [active, setActive] = useState(value);\n\n  useEffect(() => {\n    setActive(value);\n  }, [value]);\n\n  const handleClick = name => {\n    setActive(name);\n    onClick && onClick(normalizeStr(name));\n  };\n\n  const btns = getList(items);\n  if (!active) setActive(btns[0]);\n\n  return (\n    btns.length > 0 && (\n      <OptionsList {...restProps}>\n        {btns.map(name => (\n          <OptionButton\n            key={name}\n            active={active === name}\n            onClick={() => handleClick(name)}\n          >\n            {name}\n          </OptionButton>\n        ))}\n      </OptionsList>\n    )\n  );\n};\n\nOptionButtons.propType = {\n  items: oneOfType([string, arrayOf(string)]),\n  value: string,\n  onClick: func,\n};\n","import styled from '@emotion/styled';\nimport { ButtonBase, FlexCentered, TransitionBase } from 'styles/shared';\n\nconst COLOR_ACTIVE = 'white';\nconst COLOR_INACTIVE = 'var(--color-text)';\nconst COLOR_ACTIVE_BG = 'var(--color-orange)';\nconst COLOR_INACTIVE_FOCUSED_BG = 'lightgray';\n\nexport const OptionsList = styled.div`\n  ${FlexCentered('gap: 8px')};\n`;\n\nexport const OptionButton = styled(ButtonBase)`\n  position: relative;\n  padding: 5px 12px 5px 12px;\n\n  font-family: inherit;\n  font-size: 12px;\n  letter-spacing: -0.3px;\n  text-transform: capitalize;\n\n  @media screen and (min-width: 320px) {\n    font-size: inherit;\n  }\n\n  border-radius: calc(var(--border-radius) * 0.8);\n  ${TransitionBase('color background-color')};\n\n  color: ${({ active }) => (active ? COLOR_ACTIVE : COLOR_INACTIVE)};\n\n  background-color: ${({ active }) =>\n    active ? COLOR_ACTIVE_BG : 'transparent'};\n\n  &:focus-visible,\n  &:hover {\n    background-color: ${({ active }) => !active && COLOR_INACTIVE_FOCUSED_BG};\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport { isFunc } from 'utils';\n\nexport const useWillUnmount = callback => {\n  const cb = useRef(isFunc(callback) ? callback : null);\n\n  useEffect(() => {\n    const { current } = cb;\n    return () => current && current();\n  }, []);\n};\n","import { useEffect, useState, useRef } from 'react';\nimport MovieGallery from 'components/MovieGallery';\nimport { PageTitle } from 'styles/shared';\nimport { OptionButtons } from 'components/etc/OptionButtons/OptionButtons';\nimport { LoadMoreBtn } from 'components/etc/LoadMoreBtn/LoadMoreBtn';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { SubHeader } from 'components/Subheader/Subheader';\nimport { useWillUnmount } from 'hooks/useWillUnmount';\nimport TmdbService from 'services/tmdb/tmdbSrv';\n\nconst srv = new TmdbService();\nconst PAGE_TITLE = `Trends`;\nconst DEF_OPTION_VALUE = 'day';\nconst OPTION_ITEMS = 'day week';\n\n//\n// Home\n//\n\nconst Home = ({ loader }) => {\n  const [active, setActive] = useState(DEF_OPTION_VALUE);\n  const [error, setError] = useState(null);\n  const [trends, setTrends] = useState([]);\n  const [wasLoaded, setWasLoaded] = useState(false);\n  const totalPages = useRef(1);\n  const page = useRef(1);\n\n  // cleanup\n  useWillUnmount(srv.abort);\n\n  useEffect(() => {\n    srv\n      .getTrendingMovies(active)\n      .then(data => {\n        setTrends(data.results);\n        totalPages.current = data.total_pages;\n      })\n      .catch(err => {\n        setError(err);\n        console.log(err);\n      });\n\n    return () => srv.abort();\n  }, [active]);\n\n  const handleLoadMoreClick = clickCount => {\n    page.current = clickCount;\n    srv\n      .getTrendingMovies(active, { page: page.current })\n      .then(({ results }) => {\n        setTrends(cur => [...cur, ...results]);\n      })\n      .catch(setError);\n  };\n\n  const showLoadMoreBtn =\n    wasLoaded && totalPages.current > 0 && page.current < totalPages.current;\n\n  return (\n    <>\n      {error && <ErrorMessage error={error} />}\n      {!error && trends?.length > 0 && (\n        <>\n          <SubHeader>\n            <OptionButtons\n              items={OPTION_ITEMS}\n              onClick={setActive}\n              value={active}\n            />\n          </SubHeader>\n\n          <PageTitle style={{ marginBottom: 35 }}>{PAGE_TITLE}</PageTitle>\n\n          <MovieGallery\n            data={trends}\n            loader={loader}\n            onLoad={() => setWasLoaded(true)}\n          />\n\n          {showLoadMoreBtn && (\n            <LoadMoreBtn\n              onClick={handleLoadMoreClick}\n              style={{ marginTop: 40 }}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["ErrorMessage","error","console","Container","IconError","size","color","Caption","Text","code","LinkButton","to","style","textTransform","propType","shape","message","string","LoadMoreBtn","onClick","centered","restProps","useState","showLoader","setShowLoader","btnRef","useRef","btnRect","observer","clickCount","useEffect","ref","current","IntersectionObserver","observe","getBoundingClientRect","unobserve","width","height","btnProps","Button","e","isLoading","Spinner","func","bool","styled","ButtonSecondary","FlexCentered","calcCSSValue","Math","ceil","OptionButtons","items","value","active","setActive","handleClick","name","normalizeStr","btns","getList","length","OptionsList","map","OptionButton","oneOfType","arrayOf","ButtonBase","TransitionBase","useWillUnmount","callback","cb","isFunc","srv","TmdbService","loader","setError","trends","setTrends","wasLoaded","setWasLoaded","totalPages","page","abort","getTrendingMovies","then","data","results","total_pages","catch","err","log","showLoadMoreBtn","SubHeader","PageTitle","marginBottom","onLoad","cur","marginTop"],"sourceRoot":""}