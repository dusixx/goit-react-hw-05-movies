{"version":3,"file":"static/js/8011.5cbb9c4f.chunk.js","mappings":"4RAIMA,EAAkB,CACtBC,SAAU,SACVC,MAAO,UACPC,OAAQ,WAQGC,EAAc,SAAC,GAKrB,IAJLC,EAII,EAJJA,GACAC,EAGI,EAHJA,SAGI,IAFJC,cAAAA,OAEI,MAFYP,EAEZ,EADDQ,GACC,YACEC,GAASC,EAAAA,EAAAA,QAAO,MAMtB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,EAAOG,QAAUC,SAASC,cAAcC,OAAOV,IAAO,KACvD,GAAE,CAACA,KAGF,SAAC,EAAAW,YAAD,gBACEC,QAAS,kCAAMR,EAAOG,eAAb,aAAM,EAAgBM,eAAeX,EAArC,GACLC,GAFN,aAIGF,IAGN,EAEDF,EAAYe,SAAW,CACrBd,GAAIe,EAAAA,OACJb,eAAec,EAAAA,EAAAA,OAAM,CACnBpB,SAAUmB,EAAAA,OACVlB,MAAOkB,EAAAA,OACPjB,OAAQiB,EAAAA,S","sources":["components/etc/HashBtnLink/HashBtnLink.jsx"],"sourcesContent":["import { ButtonLink } from 'styles/shared';\nimport { useEffect, useRef } from 'react';\nimport { string, shape } from 'prop-types';\n\nconst DEF_SCROLL_OPTS = {\n  behavior: 'smooth',\n  block: 'nearest',\n  inline: 'nearest',\n};\n\n/**\n *\n *  @param to - любой валидный селектор\n *  @param scrollOptions - параметры для scrollIntoView\n */\nexport const HashBtnLink = ({\n  to,\n  children,\n  scrollOptions = DEF_SCROLL_OPTS,\n  ...restProps\n}) => {\n  const target = useRef(null);\n\n  useEffect(() => {\n    target.current = document.querySelector(String(to) || null);\n  }, [to]);\n\n  return (\n    <ButtonLink\n      onClick={() => target.current?.scrollIntoView(scrollOptions)}\n      {...restProps}\n    >\n      {children}\n    </ButtonLink>\n  );\n};\n\nHashBtnLink.propType = {\n  to: string,\n  scrollOptions: shape({\n    behavior: string,\n    block: string,\n    inline: string,\n  }),\n};\n"],"names":["DEF_SCROLL_OPTS","behavior","block","inline","HashBtnLink","to","children","scrollOptions","restProps","target","useRef","useEffect","current","document","querySelector","String","ButtonLink","onClick","scrollIntoView","propType","string","shape"],"sourceRoot":""}