{"version":3,"file":"static/js/3535.2f6dae9c.chunk.js","mappings":"gSAUaA,EAAc,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,QAA6C,IAApCC,SAAAA,OAAoC,SAAhBC,GAAgB,YACzE,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAASC,EAAAA,EAAAA,QAAO,MAChBC,GAAUD,EAAAA,EAAAA,QAAO,MACjBE,GAAWF,EAAAA,EAAAA,QAAO,MAClBG,GAAaH,EAAAA,EAAAA,QAAO,IAE1BI,EAAAA,EAAAA,YAAU,WACR,IAAiBC,EAAQN,EAAjBO,QAQR,OAPAJ,EAASI,QAAU,IAAIC,sBAAqB,kBAAMT,GAAc,EAApB,IAC5CI,EAASI,QAAQE,QAAQH,GAIzBJ,EAAQK,QAAUP,EAAOO,QAAQG,wBAE1B,kBAAMP,EAASI,QAAQI,UAAUL,EAAjC,CACR,GAAE,IAEH,IAMA,EAA0BJ,EAAQK,SAAW,GAArCK,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACTC,GAAQ,QAAKF,MAAAA,EAAOC,OAAAA,GAAWjB,GAErC,OACE,SAAC,EAAAmB,QAAD,gBACET,IAAKN,EACLN,QAZgB,SAAAsB,GAClBjB,GAAc,GACdK,EAAWG,SAAW,EACtBb,GAAWA,EAAQU,EAAWG,QAASS,EACxC,EASGrB,SAAUA,EACVsB,UAAWnB,GACPgB,GALN,aAOGhB,GAAa,SAAC,EAAAoB,QAAD,CAASC,KAAe,GAATN,IA1CjB,cA6CjB,EAEDpB,EAAY2B,SAAW,CACrB1B,QAAS2B,EAAAA,KACT1B,SAAU2B,EAAAA,K,+ICjDCP,GAASQ,EAAAA,EAAAA,GAAOC,EAAAA,gBAAPD,CAAH,sxCACfE,EAAAA,EAAAA,iBAMa,qBAAG9B,SAA2B,OAAS,CAAvC,IACC,qBAAGA,SAA2B,OAAS,CAAvC,IAGP,gBAAGiB,EAAH,EAAGA,MAAH,OAAec,EAAAA,EAAAA,cAAaC,KAAKC,KAAKhB,GAAtC,IACC,gBAAGC,EAAH,EAAGA,OAAH,OAAgBa,EAAAA,EAAAA,cAAaC,KAAKC,KAAKf,GAAvC,IASU,qBAAGI,UACT,oBAAsB,aADhB,IAITC,EAAUK,EAAAA,EAAAA,KAAH,gXAET,gBAAGJ,EAAH,EAAGA,KAAH,OAAcO,EAAAA,EAAAA,cAAaP,EAA3B,IACC,gBAAGA,EAAH,EAAGA,KAAH,OAAcO,EAAAA,EAAAA,cAAaP,EAA3B,G","sources":["components/etc/LoadMoreBtn/LoadMoreBtn.jsx","components/etc/LoadMoreBtn/LoadMoreBtn.styled.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Button, Spinner } from './LoadMoreBtn.styled';\nimport { func, bool } from 'prop-types';\n\nconst BTN_TITLE = 'Load more';\n\n//\n// LoadMoreBtn\n//\n\nexport const LoadMoreBtn = ({ onClick, centered = true, ...restProps }) => {\n  const [showLoader, setShowLoader] = useState(false);\n  const btnRef = useRef(null);\n  const btnRect = useRef(null);\n  const observer = useRef(null);\n  const clickCount = useRef(1);\n\n  useEffect(() => {\n    const { current: ref } = btnRef;\n    observer.current = new IntersectionObserver(() => setShowLoader(false));\n    observer.current.observe(ref);\n\n    // фактический размер, чтобы спинер не менял габариты кнопки\n    // Иначе надо жестко задать размеры кнопки в стилях\n    btnRect.current = btnRef.current.getBoundingClientRect();\n\n    return () => observer.current.unobserve(ref);\n  }, []);\n\n  const handleClick = e => {\n    setShowLoader(true);\n    clickCount.current += 1;\n    onClick && onClick(clickCount.current, e);\n  };\n\n  const { width, height } = btnRect.current || '';\n  const btnProps = { width, height, ...restProps };\n\n  return (\n    <Button\n      ref={btnRef}\n      onClick={handleClick}\n      centered={centered}\n      isLoading={showLoader}\n      {...btnProps}\n    >\n      {showLoader ? <Spinner size={height * 0.5} /> : BTN_TITLE}\n    </Button>\n  );\n};\n\nLoadMoreBtn.propType = {\n  onClick: func,\n  centered: bool,\n};\n","import styled from '@emotion/styled';\nimport { ButtonSecondary, FlexCentered } from 'styles/shared';\nimport { calcCSSValue } from 'utils';\n\nexport const Button = styled(ButtonSecondary)`\n  ${FlexCentered()};\n\n  /* padding-top: 17px;\n  padding-bottom: 17px; */\n  /* width: 100%; */\n\n  margin-left: ${({ centered }) => (centered ? 'auto' : 0)};\n  margin-right: ${({ centered }) => (centered ? 'auto' : 0)};\n\n  /* без ceil при адаптивке переносится текст кнопки */\n  width: ${({ width }) => calcCSSValue(Math.ceil(width))};\n  height: ${({ height }) => calcCSSValue(Math.ceil(height))};\n\n  //white-space: nowrap;\n\n  /*\n    Пока кнопка со спинером - не убираем цвето фона\n    Иначе, спиннер сольется с фоном страницы\n    Можно сдлеать так, чтобы цвет спиннера менялся на прозрачном фоне\n  */\n  background-color: ${({ isLoading }) =>\n    isLoading ? 'var(--color-blue)' : 'transparent'};\n`;\n\nexport const Spinner = styled.span`\n  display: inline-block;\n  width: ${({ size }) => calcCSSValue(size)};\n  height: ${({ size }) => calcCSSValue(size)};\n\n  border: 2px solid #fff;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n\n  animation: rotation 0.7s linear infinite;\n  opacity: 0.6;\n\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n"],"names":["LoadMoreBtn","onClick","centered","restProps","useState","showLoader","setShowLoader","btnRef","useRef","btnRect","observer","clickCount","useEffect","ref","current","IntersectionObserver","observe","getBoundingClientRect","unobserve","width","height","btnProps","Button","e","isLoading","Spinner","size","propType","func","bool","styled","ButtonSecondary","FlexCentered","calcCSSValue","Math","ceil"],"sourceRoot":""}