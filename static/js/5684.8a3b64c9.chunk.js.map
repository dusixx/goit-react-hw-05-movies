{"version":3,"file":"static/js/5684.8a3b64c9.chunk.js","mappings":"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","sources":["components/etc/BodyScrollLock/BodyScrollLock.jsx","components/etc/ModalImage/Modal/Modal.jsx","components/etc/ModalImage/Modal/Modal.styled.jsx","components/etc/ModalImage/ModalImage.jsx","components/etc/ModalImage/ModalImage.styled.jsx","components/etc/Spinner/Spinner.jsx","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-transition-group/esm/utils/reflow.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { isVScrollBarVisible } from 'utils';\n\nconst { body } = document;\nconst root = document.documentElement;\n\nexport const BodyScrollLock = () => {\n  useEffect(() => {\n    const top = window.scrollY;\n    const bodyCSSText = body.style.cssText;\n\n    body.style.cssText = `\n        ${bodyCSSText};\n        position: fixed;\n        top: -${top}px;\n        width: 100%;\n        overflow-y: ${isVScrollBarVisible() ? `scroll` : `hidden`};\n      `;\n\n    return () => {\n      body.style.cssText = bodyCSSText;\n\n      // предотвращаем автоскролинг\n      root.style.scrollBehavior = 'auto';\n      window.scrollTo({ top });\n      root.style.removeProperty('scroll-behavior');\n    };\n  }, []);\n};\n\nexport default BodyScrollLock;\n","import { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { func, string, bool } from 'prop-types';\nimport { Backdrop, Container } from './Modal.styled';\nimport BodyScrollLock from 'components/etc/BodyScrollLock';\nimport { Transition } from 'react-transition-group';\n\nconst rootModal = document.querySelector('#root-modal');\n\nconst TRANS_DURATION = 250;\n\nconst defaultStyle = {\n  transitionProperty: `opacity`,\n  transitionDuration: 'var(--trans-duration)',\n  transitionTimingFunction: 'var(--trans-func)',\n  opacity: 0,\n};\n\nconst transitionStyles = {\n  entering: { opacity: 1 },\n  entered: { opacity: 1 },\n};\n\n//\n// Modal\n//\n\nconst Modal = ({\n  children,\n  bgColor,\n  onClose,\n  bodyScrollLock = true,\n  visible,\n}) => {\n  const backdropRef = useRef(null);\n\n  useEffect(() => {\n    const handleKeydown = ({ code }) =>\n      code === 'Escape' && onClose && onClose();\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [onClose]);\n\n  const handleBackdropClick = ({ currentTarget, target }) =>\n    currentTarget === target && onClose && onClose();\n\n  return createPortal(\n    <Transition\n      mountOnEnter\n      unmountOnExit\n      timeout={TRANS_DURATION}\n      nodeRef={backdropRef}\n      in={visible}\n    >\n      {state => (\n        <Backdrop\n          ref={backdropRef}\n          onClick={handleBackdropClick}\n          bgColor={bgColor}\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {bodyScrollLock && <BodyScrollLock />}\n          <Container>{children}</Container>\n        </Backdrop>\n      )}\n    </Transition>,\n    rootModal\n  );\n};\n\nModal.propTypes = {\n  bgColor: string,\n  onClose: func,\n  bodyScrollLock: bool,\n  visible: bool,\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nconst DEF_COLOR_BG = 'rgb(0 0 0 / 0.5)';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n  z-index: 999;\n\n  background-color: ${({ bgColor }) => bgColor || DEF_COLOR_BG};\n  overflow: auto;\n`;\n\nexport const Container = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n\n  transform: translate(-50%, -50%);\n`;\n","import { useState } from 'react';\nimport Modal from './Modal/Modal';\nimport { Spinner } from '../Spinner';\nimport { ModalContainer, ModalThumb } from './ModalImage.styled';\nimport { string, bool, func } from 'prop-types';\n\nconst COLOR_MODAL_BG = 'rgb(255 255 255 / 0.7)';\n\n//\n// ModalImage\n//\n\nexport const ModalImage = ({ src, alt, visible, onClose }) => {\n  const [wasModalImageLoaded, setWasModalImageLoaded] = useState(false);\n\n  return (\n    <Modal onClose={onClose} bgColor={COLOR_MODAL_BG} visible={visible}>\n      <ModalContainer>\n        <Spinner width={40} visible={!wasModalImageLoaded} />\n        <ModalThumb>\n          <img\n            src={src}\n            alt={alt}\n            onLoad={() => setWasModalImageLoaded(true)}\n          />\n        </ModalThumb>\n      </ModalContainer>\n    </Modal>\n  );\n};\n\nModalImage.propType = {\n  src: string,\n  alt: string,\n  visible: bool,\n  onClose: func,\n};\n","import styled from '@emotion/styled';\nimport { FlexCentered } from 'styles/shared';\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  ${FlexCentered()};\n\n  & :nth-of-type() {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n`;\n\nexport const ModalThumb = styled.div`\n  position: absolute;\n\n  & img {\n    height: 90vh;\n    width: auto;\n    /* чтобы оставалось куда кликнуть в бекдроп */\n    max-width: 70vw;\n    object-fit: contain;\n    object-position: center;\n  }\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { number, oneOfType, string } from 'prop-types';\n\nexport const Spinner = ({ width = 40, ...restProps }) => (\n  <RotatingLines\n    strokeColor=\"black\"\n    strokeWidth=\"3\"\n    animationDuration=\"0.75\"\n    width={width}\n    visible={true}\n    {...restProps}\n  />\n);\n\nSpinner.propType = {\n  width: oneOfType([string, number]),\n};\n","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};"],"names":["body","document","root","documentElement","BodyScrollLock","useEffect","top","window","scrollY","bodyCSSText","style","cssText","isVScrollBarVisible","scrollBehavior","scrollTo","removeProperty","rootModal","querySelector","defaultStyle","transitionProperty","transitionDuration","transitionTimingFunction","opacity","transitionStyles","entering","entered","children","bgColor","onClose","bodyScrollLock","visible","backdropRef","useRef","handleKeydown","code","addEventListener","removeEventListener","handleBackdropClick","currentTarget","target","createPortal","mountOnEnter","unmountOnExit","timeout","nodeRef","in","state","Backdrop","ref","onClick","Container","styled","ModalImage","src","alt","useState","wasModalImageLoaded","setWasModalImageLoaded","ModalContainer","Spinner","width","ModalThumb","onLoad","propType","string","bool","func","FlexCentered","restProps","strokeColor","strokeWidth","animationDuration","oneOfType","number","React","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","subClass","superClass","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","status","nextCallback","prototype","Object","create","constructor","setPrototypeOf","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","undefined","mounting","node","current","ReactDOM","scrollTop","forceReflow","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","childProps","_objectWithoutPropertiesLoose","TransitionGroupContext","Provider","value","noop","contextType","propTypes","defaultProps"],"sourceRoot":""}