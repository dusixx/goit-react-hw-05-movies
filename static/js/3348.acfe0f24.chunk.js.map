{"version":3,"file":"static/js/3348.acfe0f24.chunk.js","mappings":"uOA+BA,UA3BkB,SAAC,GAA6C,IAA3CA,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,SAAaC,GAAgB,YAC7D,OACE,SAAC,EAAAC,MAAD,WACE,UAAC,EAAAC,aAAD,YACE,SAAC,EAAAC,OAAD,QACEL,KAAMA,GAAQ,OACdC,SAAUA,EACVF,MAAOA,GACHG,IAELH,IAEC,SAAC,EAAAO,SAAD,CAAUN,KAAK,SAASO,QAAS,kBAAMN,EAAS,KAAf,EAAjC,UACE,SAAC,MAAD,CAAWO,KAAK,eAM3B,C,sMCpBYL,EAAQM,EAAAA,EAAAA,MAAH,uDACP,qBAAGC,OAAqB,MAAxB,IACC,qBAAGC,QAAuB,MAA1B,IAGCP,EAAeK,EAAAA,EAAAA,IAAH,wJAMb,qBAAGE,QAAuB,MAA1B,IAICN,EAAQI,EAAAA,EAAAA,MAAH,iSAYdG,EAAAA,EAAAA,mBAQSN,GAAWG,EAAAA,EAAAA,GAAOI,EAAAA,WAAPJ,CAAH,uQ","sources":["components/etc/TextField/TextField.jsx","components/etc/TextField/TextField.styled.jsx"],"sourcesContent":["import { func, string } from 'prop-types';\nimport { ClearBtn, InputWrapper, Input, Field } from './TextField.styled';\nimport { VscClose as IconClose } from 'react-icons/vsc';\n\nconst TextField = ({ value, type, onChange, ...restProps }) => {\n  return (\n    <Field>\n      <InputWrapper>\n        <Input\n          type={type || 'text'}\n          onChange={onChange}\n          value={value}\n          {...restProps}\n        />\n        {value && (\n          // !! обязательно type=\"button\", по-умолчанию ставит \"submit\"\n          <ClearBtn type=\"button\" onClick={() => onChange(null)}>\n            <IconClose size=\"100%\" />\n          </ClearBtn>\n        )}\n      </InputWrapper>\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  value: string,\n  type: string,\n  onChange: func,\n};\n\nexport default TextField;\n","import styled from '@emotion/styled';\nimport { ButtonBase, TransitionBase } from 'styles/shared';\n\nexport const Field = styled.label`\n  width: ${({ width }) => width || '100%'};\n  height: ${({ height }) => height || '100%'};\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  width: 100%;\n  height: ${({ height }) => height || '100%'};\n  color: var(--color-text);\n`;\n\nexport const Input = styled.input`\n  height: 100%;\n  width: 100%;\n  padding: 0 40px 0 20px;\n\n  font-family: inherit;\n  font-size: inherit;\n  background-color: white;\n\n  border: unset;\n  outline: none;\n\n  ${TransitionBase()};\n\n  &::placeholder {\n    opacity: 0.6;\n    text-transform: capitalize;\n  }\n`;\n\nexport const ClearBtn = styled(ButtonBase)`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n\n  height: 60%;\n  padding: 3px;\n\n  color: gray;\n  transform: translateY(-50%);\n  transition-property: color;\n\n  &:focus-visible,\n  &:hover {\n    color: var(--color-black);\n  }\n`;\n"],"names":["value","type","onChange","restProps","Field","InputWrapper","Input","ClearBtn","onClick","size","styled","width","height","TransitionBase","ButtonBase"],"sourceRoot":""}