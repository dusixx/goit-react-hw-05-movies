{"version":3,"file":"static/js/339.1a265696.chunk.js","mappings":"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","sources":["components/MovieCard/About/About.jsx","components/MovieCard/About/About.styled.jsx"],"sourcesContent":["import { arrayOf, number, object, string } from 'prop-types';\nimport { LinkPrimary } from 'styles/shared';\nimport { splitNumIntoTriads } from 'utils';\n\nimport {\n  List,\n  Item,\n  Container,\n  Title,\n  Tagline,\n  Label,\n  Cast,\n} from './About.styled';\n\n//\n// About\n//\n\nexport const About = ({\n  budget,\n  revenue,\n  production_countries = [],\n  genres = [],\n  homepage,\n  overview,\n  release_date,\n  tagline,\n  crew,\n  cast,\n  runtime,\n  ...restProps\n}) => {\n  const genresList = genres?.length\n    ? genres.map(({ name }) => name).join(', ')\n    : null;\n\n  const countries = production_countries?.length\n    ? production_countries.map(({ name }) => name).join(', ')\n    : null;\n\n  const releaseDate = release_date\n    ? new Date(release_date).toLocaleDateString()\n    : null;\n\n  const runtimeHHMM = `${new Date(runtime * 60000)\n    .toISOString()\n    .substr(11, 5)\n    .replace(':', 'h ')}m`;\n\n  const haveAnyDataAbout =\n    releaseDate ||\n    countries ||\n    genresList ||\n    tagline ||\n    budget > 0 ||\n    revenue > 0 ||\n    runtimeHHMM;\n\n  return (\n    <Container>\n      {haveAnyDataAbout && (\n        <>\n          <Title>About</Title>\n\n          <List {...restProps}>\n            {releaseDate && (\n              <Item>\n                <Label>release</Label>\n                <span>{releaseDate}</span>\n              </Item>\n            )}\n\n            {countries && (\n              <Item>\n                <Label>countries</Label>\n                <span>{countries}</span>\n              </Item>\n            )}\n\n            {genresList && (\n              <Item>\n                <Label>genres</Label>\n                <span>{genresList}</span>\n              </Item>\n            )}\n\n            {tagline && (\n              <Item>\n                <Label>tagline</Label>\n                <span>\n                  <Tagline>{tagline}</Tagline>\n                </span>\n              </Item>\n            )}\n\n            {budget > 0 && (\n              <Item>\n                <Label>budget</Label>\n                <span>${splitNumIntoTriads(budget)}</span>\n              </Item>\n            )}\n\n            {revenue > 0 && (\n              <Item>\n                <Label>revenue</Label>\n                <span>${splitNumIntoTriads(revenue)}</span>\n              </Item>\n            )}\n\n            {crew &&\n              Object.entries(crew).map(([jobName, persons]) => {\n                return (\n                  persons.length > 0 && (\n                    <Item key={jobName}>\n                      <Label>{jobName}</Label>\n                      <span>{persons.join(', ')}</span>\n                    </Item>\n                  )\n                );\n              })}\n\n            {cast && (\n              <Item>\n                <Label>cast</Label>\n                <Cast>\n                  {cast.preview}\n                  <LinkPrimary to=\"credits\">{cast.remaining}</LinkPrimary>\n                </Cast>\n              </Item>\n            )}\n\n            {runtime > 0 && (\n              <Item>\n                <Label>runtime</Label>\n                <span>{runtimeHHMM}</span>\n              </Item>\n            )}\n          </List>\n        </>\n      )}\n    </Container>\n  );\n};\n\nAbout.propType = {\n  budget: number,\n  revenue: number,\n  runtime: number,\n  production_countries: arrayOf(object),\n  genres: arrayOf(object),\n  cast: object,\n  crew: object,\n  release_date: string,\n  tagline: string,\n};\n","import styled from '@emotion/styled';\nimport { Subtitle } from 'styles/shared';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  line-height: 1.3;\n\n  @media screen and (min-width: 768px) {\n    align-items: initial;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  max-width: 700px;\n\n  @media screen and (min-width: 768px) {\n    align-items: initial;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: initial;\n    gap: 20px;\n  }\n\n  & span {\n    text-align: center;\n    @media screen and (min-width: 768px) {\n      text-align: left;\n    }\n  }\n`;\n\nexport const Label = styled.span`\n  width: 100px;\n  flex-shrink: 0;\n\n  font-weight: bold;\n  letter-spacing: -0.2px;\n  text-transform: capitalize;\n\n  &::after {\n    content: ':';\n  }\n`;\n\nexport const Cast = styled.p`\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    text-align: left;\n  }\n`;\n\nexport const Tagline = styled.span`\n  font-style: italic;\n  font-weight: 400;\n  color: gray;\n`;\n\nexport const Title = styled(Subtitle)`\n  margin-top: 35px;\n  margin-bottom: 20px;\n`;\n"],"names":["About","budget","revenue","production_countries","genres","release_date","homepage","overview","tagline","crew","cast","runtime","restProps","genresList","length","map","name","join","countries","releaseDate","Date","toLocaleDateString","runtimeHHMM","toISOString","substr","replace","haveAnyDataAbout","Container","Title","List","Item","Label","Tagline","splitNumIntoTriads","Object","entries","jobName","persons","Cast","preview","LinkPrimary","to","remaining","propType","number","arrayOf","object","string","styled","Subtitle"],"sourceRoot":""}